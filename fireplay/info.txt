1110 11xx registro B  62 xor EF= 8D    / 88
0110 0010 ini
1000 1000 shi
0110 01xx xor
1001 xx00 shi
0111 XXyy xor
11XX yy00 shi
00xX YYzz xor
xXYY zz00 shi
XxyY ZZww xor

1110 11xx registro B  37 xor EF= D8    / DC
0011 0111 ini
1101 1100 shi
0011 00xx xor
1100 xx00 shi
0010 XXyy xor
10XX yy00 shi
01xX YYzz xor
xXYY zz00 shi
XxyY ZZww xor

0000 00xx registro B  01 xor 00= 01    / 04
0000 0001 ini
0000 0100 shi
0000 01xx xor
0001 xx00 shi
0001 xxyy xor
01xx yy00 shi
01xx yyzz xor
xxyy zz00 shi
xxyy zzww xor

 teclas problematicas
 6 7 8 9 0
 Z X C V Shift
 A S D F G

ZxTapTimingInfo   48K        128K
01 HP SAIMAZOOM   123        126
02 D  213         3494400    234124
03 HB saimazooms  123        234
04 D  6914        1234       2142
05 HB saimazoomc  123        321
06 D  34502       Block      Block

En ultra1.asm
;  3293-32bf: 44 bytes int sna128b tan
;  32d7-32ff: 40 bytes movefp stkcons asin
;  3302-330c: 10 bytes acs+3
;  33c2-33e0: 30 bytes exogetbits tabla
;  33e0-33ff: 31 bytes constan exchang
;  340d-346a: 93 bytes calcula skipcon

En ultra2.asm
;  36a0-36bf: 31 bytes acs lockmem stacknu
;  36c2-36f5: 51 bytes strpow stmemx
;  37cd-37ff: 50 bytes restack
;  3802-3892: 144 bytes ultra
;  3892-38ff: 109 bytes sna48 seriesx getpair
;  3901-39ff: 254 bytes ln atn getargt get16 exogetb
;  3a01-3aff: 254 bytes tbladd stkdata cossin sna128a
  3b01-3bff: 254 bytes

En rom.asm
;  32d7-335b: tbladd 132 bytes
;  3a8f-3aff: ln     112 bytes
;  3b73-3bc4: atn     81 bytes
;  335b-33a9: calcula 78 bytes
;sna48                56 bytes
;  3293-32c5: restack 50 bytes
;  33c6-33f7: stkdata 49 bytes
;  3b3b-3b6b: cossin  48 bytes
;  3b14-3b3b: getargt 39 bytes
;  3bdb-3bff: sqrpow  36 bytes
;  3449-3a1c: seriesx 33 bytes
;sna128a              24 bytes
;  3a2b-3a40: int     21 bytes
;getpair              20 bytes
;  32c5-32d7: constan 18 bytes
;  341b-342d: stkcons 18 bytes
;  3bc4-3bd4: asin    16 bytes
;get16                16 bytes
;  342d-343c: stmemxx 15 bytes
;  33f7-3406: skipcon 15 bytes
;  33b4-33c0: stacknu 12 bytes
;  343c-3449: exchang 13 bytes
;sna128b              12 bytes
;  33a9-33b4: test5   11 bytes
;  3406-340f: lockmem  8 bytes
;  3b6b-3b73: tan      8 bytes
;  3bd4-3bdb: acs      7 bytes
;  33c0-33c6: movefp   6 bytes
;exogetb               6 bytes
  3a1c-3a2b: nmodm   15 bytes
exo                 123 bytes
  3a40-3a8f: exp     79 bytes
  340f-341b: getmemx 12 bytes


R520 0->2
R524 2->4
4563

loadini
4563  parcheo 6 y guardo en 4
R524  muevo parche 4->2
      parcheo 2
R520  muevo parche 2->0
R521  5->1 desde 2
R526  6->2 desde 2
0123  recupero 2 con parche en 0

loadfin
0123  parcheo 2 y guardo en 0
R520  muevo parche 0->2
R521  1->5 desde 2
R526  2->6 desde 2
R524  muevo parche 2->4
4563  recupero 6 con parche en 4

ABAJO,ENTER,usr2039,ENTER

exo_raw.c match.c search.c optimal.c output.c membuf_io.c chunkpool.c radix.c exo_helper.c
exodec.c progress.c exo_util.c getflag.c log.c membuf.c


      IFDEF enram
        DEFB    $C9, $C9, $C9; 3 bytes
      ELSE
L32BC:  JP      L3403
      ENDIF


        DEFB    $00;  1 byte




